# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

x-all-permutations: &all-permutations
  matrix:
    dependencies:
      - "lowest"
      - "highest"
      - "locked"
    php-version:
      - "7.2"
      - "7.3"
      - "7.4"
    operating-system:
      - "ubuntu-latest"
      - "windows-latest"

x-latest-only: &stable-only
  matrix:
    dependencies:
      - "locked"
    php-version:
      - "7.4"
    operating-system:
      - "ubuntu-latest"

x-cache: &cache
  name: "Cache dependencies"
  uses: "actions/cache@v2"
  with:
    path: |
      ~/.composer/cache
      vendor
    key: "php-${{ matrix.php-version }}-${{ matrix.dependencies }}"
    restore-keys: "php-${{ matrix.php-version }}-${{ matrix.dependencies }}"

x-default-steps: &default-steps
  - name: "Checkout"
    uses: "actions/checkout@v2"

  - name: "Install PHP"
    uses: "shivammathur/setup-php@v2"
    with:
      coverage: "pcov"
      php-version: "${{ matrix.php-version }}"
      extensions: mbstring

  - *cache

  - name: "Install lowest dependencies"
    if: ${{ matrix.dependencies == 'lowest' }}
    run: "composer update --prefer-lowest --no-interaction --no-progress --no-suggest"

  - name: "Install highest dependencies"
    if: ${{ matrix.dependencies == 'highest' }}
    run: "composer update --no-interaction --no-progress --no-suggest"

  - name: "Install locked dependencies"
    if: ${{ matrix.dependencies == 'locked' }}
    run: "composer install --no-interaction --no-progress --no-suggest"

name: "Build"

on:
  pull_request:
  push:
    branches:
      - "master"

jobs:
  tests:
    name: "Test"
    runs-on: ${{ matrix.operating-system }}
    strategy: *all-permutations
    steps:
      << : *default-steps

      - name: "Tests"
        run: "php -dmemory_limit=-1 vendor/phpunit/phpunit/phpunit"

  compatibility:
    name: "Test Compatibility"
    runs-on: ${{ matrix.operating-system }}
    strategy: *all-permutations
    steps:
      << : *default-steps

      - name: "Test Compatibility"
        run: "vendor/bin/phpunit test/compat"

  demo-scripts:
    name: "Check Demo Scripts"
    runs-on: ${{ matrix.operating-system }}
    strategy: *stable-only
    steps:
      << : *default-steps

      - name: "Check Demo Scripts"
        run: "test/demo/check-demo.sh"

  coding-standards:
    name: "Check Coding Standards"
    runs-on: ${{ matrix.operating-system }}
    strategy: *stable-only
    steps:
      << : *default-steps

      - name: "Coding Standard"
        run: "vendor/bin/phpcs"

  static-analysis-phpstan:
    name: "Static Analysis by PHPStan"
    runs-on: ${{ matrix.operating-system }}
    strategy: *stable-only
    steps:
      <<: *default-steps

      - name: "PHPStan"
        run: "vendor/bin/phpstan analyse --memory-limit=-1"

  static-analysis-psalm:
    name: "Static Analysis by Psalm"
    runs-on: ${{ matrix.operating-system }}
    strategy: *stable-only
    steps:
      <<: *default-steps

      - name: "Psalm"
        run: "vendor/bin/psalm --shepherd --stats"

  benchmarks:
    name: "Run benchmarks"
    runs-on: ${{ matrix.operating-system }}
    strategy: *stable-only
    steps:
      <<: *default-steps

      - name: "Install PhpBench"
        run: "composer require --dev --prefer-stable --no-interaction --no-progress --no-suggest phpbench/phpbench:~0.17.0"

      - name: "PhpBench"
        run: "vendor/bin/phpbench run --progress=dots --iterations=1"

  mutation-tests:
    name: "Run mutation tests"
    runs-on: ${{ matrix.operating-system }}
    strategy: *stable-only
    steps:
      <<: *default-steps

      - name: "Infection"
        run: "vendor/bin/infection"
